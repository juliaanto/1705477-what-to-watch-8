{"version":3,"sources":["const.ts","utils/adapter/film.ts","types/action.ts","services/token.ts","store/action.ts","services/api.ts","utils/auth-errors.ts","store/api-actions.ts","components/rating-list/rating-list.tsx","components/add-review-form/add-review-form.tsx","components/logo/logo.tsx","components/not-found-screen/not-found-screen.tsx","store/root-reducer.ts","store/film-data/film-data.ts","store/film-search/film-search.ts","store/user-process/user-process.ts","store/user-process/selectors.ts","components/user-block/user-block.tsx","store/film-data/selectors.ts","components/add-review-screen/add-review-screen.tsx","components/loading-screen/loading-screen.tsx","components/video-player/video-player.tsx","components/film-card-screen/film-card-screen.tsx","components/film-list/film-list.tsx","components/my-list-button/my-list-button.tsx","components/tab-details/tab-details.tsx","utils/films.ts","components/tab-overview/tab-overview.tsx","components/review-item.tsx/review-item.tsx","components/tab-reviews/tab-reviews.tsx","components/tabs/tabs.tsx","store/film-search/selectors.ts","components/film-screen/film-screen.tsx","components/genre-list/genre-list.tsx","components/show-more/show-more.tsx","components/main-screen/main-screen.tsx","components/my-list-screen/my-list-screen.tsx","components/player-screen/player-screen.tsx","components/private-route/private-route.tsx","components/sign-in-screen/sign-in-screen.tsx","utils/adapter/auth-info.ts","browser-history.ts","components/app/app.tsx","index.tsx","store/middlewares/redirect.ts"],"names":["AppRoute","APIRoute","AuthorizationStatus","APIRouteById","id","filmId","status","RatingText","RatingBoundaryValue","Links","ALL_GENRES","PROMO_ID","ReviewTextLength","RATING_VALUES","ActionType","adaptFilmToClient","film","name","posterImage","previewImage","backgroundImage","backgroundColor","videoLink","previewVideoLink","description","rating","scoresCount","director","starring","runTime","genre","released","isFavorite","adaptFilmsToClient","films","map","AUTH_TOKEN_KEY_NAME","HttpCode","resetFilmsPerPage","type","ResetFilmsPerPage","requireAuthorization","authStatus","RequireAuthorization","payload","redirectToRoute","url","RedirectToRoute","api","onUnauthorized","axios","create","baseURL","timeout","interceptors","response","use","error","Unauthorized","Promise","reject","request","config","token","localStorage","getItem","getToken","headers","createAPI","noAuthAction","getLoginError","email","password","fetchCurrentFilmAction","dispatch","_getState","a","get","data","currentFilm","LoadFilm","isAxiosError","NotFound","Auth","SignIn","RatingList","className","ratingValue","value","htmlFor","connector","connect","onSubmit","commentPost","comment","post","commentPostAction","props","useParams","useState","reviewText","setReviewText","setRatingValue","action","evt","preventDefault","Number","onChange","target","placeholder","minLength","Min","maxLength","Max","disabled","length","onResetGenre","ResetGenre","onResetFilmsPerPage","to","Main","onClick","NotFoundScreen","NameSpace","initialState","isDataLoaded","filmsPerPageCount","currentPlayerTime","videoDuration","authorizationStatus","Unknown","userAvatar","loginError","undefined","rootReducer","combineReducers","state","LoadFilms","LoadPromo","promo","ChangeGenre","ShowMoreFilms","SetCurrentPlayerTime","SetVideoDuration","user","RequireLogout","NoAuth","SaveUserAvatar","DropUserAvatar","SetLoginError","getAuthorizationStatus","getUserAvatar","signOut","delete","Logout","removeItem","MyList","src","alt","width","height","getFilms","getLoadedDataStatus","getCurrentFilm","getPromo","fetchCurrentFilm","useEffect","href","LoadingScreen","xmlns","xmlnsXlink","style","margin","background","display","shapeRendering","viewBox","preserveAspectRatio","transform","x","y","rx","ry","fill","attributeName","values","keyTimes","dur","begin","repeatCount","onFilmPlay","currentTime","onFilmChange","setVideoDuration","muted","isActive","isFilmScreen","isFullScreen","isLoaded","setIsLoaded","isPlaying","videoRef","useRef","current","onloadeddata","duration","play","setTimeout","clearTimeout","load","setInterval","pause","requestFullscreen","ref","poster","onCanPlayThrough","FilmCardScreen","FilmList","activeCard","setActiveCard","slice","keyValue","onMouseEnter","onMouseLeave","onFavoriteButtonClick","favoriteStatus","changeFavoriteStatusAction","currentId","useLocation","pathname","setFavoriteStatus","xlinkHref","TabDetails","join","Math","floor","dayjs","extend","getFilmsByGenre","filter","getPlayerProgress","currentTimeInSeconds","durationInSeconds","TabOverview","Bad","Normal","Good","VeryGood","Awesome","ReviewItem","review","dateTime","date","format","toLocaleString","TabReviews","reviews","reviewsForFirstColumn","_","index","reviewsForSecondColumn","Tabs","appState","setAppState","then","path","filmReviews","currentPath","useHistory","location","setActiveTab","getGenre","getFilmsPerPageCount","getCurrentPlayerTime","getVideoDuration","similarFilms","onChangeGenre","changeGenre","allFilms","genresList","Set","item","onShowMoreFilms","Favorite","setIsActive","setIsFullScreen","playerStyle","left","max","exact","render","authData","login","Login","authInfo","adaptedAuthInfo","avatarUrl","avatar_url","setItem","BadRequest","loginAction","loginRef","passwordRef","required","browserHistory","createBrowserHistory","history","AddReview","Film","Player","store","createStore","composeWithDevTools","applyMiddleware","thunk","withExtraArgument","_store","next","push","Films","Promo","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0aacd08e.chunk.js","sourcesContent":["export enum AppRoute {\n  Main = '/',\n  SignIn = '/login',\n  MyList = '/mylist',\n  Film = '/films/:id',\n  AddReview = '/films/:id/review',\n  Player = '/player/:id',\n  NotFound = '/notfound'\n}\n\nexport enum APIRoute {\n  Films = '/films',\n  Promo = '/promo',\n  Login = '/login',\n  Logout = '/logout',\n  Favorite = '/favorite',\n}\n\nexport const APIRouteById = {\n  FilmById: ((id: number): string => `/films/${id}`),\n  CommentsByFilmId: ((filmId: number): string => `/comments/${filmId}`),\n  SimilarFilmsById: ((filmId: number): string => `/films/${filmId}/similar`),\n  CommentPostByFilmId: ((filmId: number): string => `/comments/${filmId}`),\n  ChangeFavoriteStatusByFilmId: ((filmId: number, status: number): string => `/favorite/${filmId}/${status}`),\n};\n\nexport enum AuthorizationStatus {\n  Auth = 'AUTH',\n  NoAuth = 'NO_AUTH',\n  Unknown = 'UNKNOWN',\n}\n\nexport const Links = {\n  OverviewFilmById: ((id: number): string => `/films/${id}`),\n  DetailsFilmById: ((id: number): string => `/films/${id}/details`),\n  ReviewsFilmById: ((id: number): string => `/films/${id}/reviews`),\n  AddReviewByFilmId: ((id: number): string => `/films/${id}/review`),\n  PlayerById: ((id: number | string): string => `/player/${id}`),\n};\n\nexport const ALL_GENRES = 'All genres';\n\nexport const FILMS_PER_PAGE_COUNT = 8;\n\nexport const PROMO_ID = 'promo';\n\nexport const GENRES_COUNT = 9;\n\nexport enum RatingText {\n  Bad = 'Bad',\n  Normal = 'Normal',\n  Good = 'Good',\n  VeryGood = 'Very good',\n  Awesome = 'Awesome',\n}\n\nexport enum RatingBoundaryValue {\n  Bad = 3,\n  Normal = 5,\n  Good = 8,\n  VeryGood = 10,\n}\n\nexport const RATING_VALUES = [10, 9, 8, 7, 6, 5, 4, 3, 2, 1];\n\nexport enum ReviewTextLength {\n  Min = 50,\n  Max = 400,\n}\n","import {Film, FilmFromServer, Films, FilmsFromServer} from '../../types/film';\n\nexport const adaptFilmToClient = (film: FilmFromServer): Film => ({\n  id: film.id,\n  name: film.name,\n  posterImage: film['poster_image'],\n  previewImage: film['preview_image'],\n  backgroundImage: film['background_image'],\n  backgroundColor: film['background_color'],\n  videoLink: film['video_link'],\n  previewVideoLink: film['preview_video_link'],\n  description: film.description,\n  rating: film.rating,\n  scoresCount: film['scores_count'],\n  director: film.director,\n  starring: film.starring,\n  runTime: film['run_time'],\n  genre: film.genre,\n  released: film.released,\n  isFavorite: film['is_favorite'],\n});\n\nexport const adaptFilmsToClient = (films: FilmsFromServer): Films => films.map((film: FilmFromServer) => adaptFilmToClient(film));\n","import {\n  ThunkAction,\n  ThunkDispatch\n} from 'redux-thunk';\nimport {\n  changeGenre,\n  dropUserAvatar,\n  loadFilm,\n  loadFilms,\n  loadPromo,\n  redirectToRoute,\n  requireAuthorization,\n  requireLogout,\n  resetFilmsPerPage,\n  resetGenre,\n  saveUserAvatar,\n  setCurrentPlayerTime,\n  setLoginError,\n  setVideoDuration,\n  showMoreFilms\n} from '../store/action';\n\nimport {\n  AxiosInstance\n} from 'axios';\nimport {State} from '../types/state';\n\nexport enum ActionType {\n  ChangeGenre = 'films/changeGenre',\n  ResetGenre = 'films/resetGenre',\n  UpdateFilmList = 'films/updateFilmList',\n  ResetFilmList = 'films/resetFilmList',\n  ShowMoreFilms = 'films/showMoreFilms',\n  ResetFilmsPerPage = 'films/resetFilmsPerPage',\n  LoadFilms = 'data/loadFilms',\n  LoadFilm = 'data/loadFilm',\n  RequireAuthorization = 'user/requireAuthorization',\n  RequireLogout = 'user/requireLogout',\n  RedirectToRoute = 'films/redirectToRoute',\n  SaveUserAvatar = 'data/saveUserAvatar',\n  DropUserAvatar = 'data/dropUserAvatar',\n  SetLoginError = 'uesr/setLoginError',\n  SetCurrentPlayerTime = 'films/setCurrentPlayerTime',\n  SetVideoDuration = 'films/setVideoDuration',\n  LoadPromo = 'data/loadPromo',\n}\n\nexport type Actions =\n  | ReturnType<typeof changeGenre>\n  | ReturnType<typeof resetGenre>\n  | ReturnType<typeof showMoreFilms>\n  | ReturnType<typeof resetFilmsPerPage>\n  | ReturnType<typeof loadFilms>\n  | ReturnType<typeof loadFilm>\n  | ReturnType<typeof requireAuthorization>\n  | ReturnType<typeof requireLogout>\n  | ReturnType<typeof redirectToRoute>\n  | ReturnType<typeof saveUserAvatar>\n  | ReturnType<typeof dropUserAvatar>\n  | ReturnType<typeof setLoginError>\n  | ReturnType<typeof setCurrentPlayerTime>\n  | ReturnType<typeof setVideoDuration>\n  | ReturnType<typeof loadPromo>;\n\nexport type ThunkActionResult<R = Promise<void>> = ThunkAction<R, State, AxiosInstance, Actions>;\n\nexport type ThunkAppDispatch = ThunkDispatch<State, AxiosInstance, Actions>;\n","const AUTH_TOKEN_KEY_NAME = 'what-to-watch-token';\n\nexport type Token = string;\n\nexport const getToken = (): Token => {\n  const token = localStorage.getItem(AUTH_TOKEN_KEY_NAME);\n  return token ?? '';\n};\n\nexport const saveToken = (token: Token): void => {\n  localStorage.setItem(AUTH_TOKEN_KEY_NAME, token);\n};\n\nexport const dropToken = (): void => {\n  localStorage.removeItem(AUTH_TOKEN_KEY_NAME);\n};\n","import {Film, Films} from '../types/film';\n\nimport {ActionType} from '../types/action';\nimport {AuthorizationStatus} from '../const';\n\nexport const changeGenre = (genre: string) => ({\n  type: ActionType.ChangeGenre,\n  payload: genre,\n} as const);\n\nexport const resetGenre = () => ({\n  type: ActionType.ResetGenre,\n} as const);\n\nexport const showMoreFilms = () => ({\n  type: ActionType.ShowMoreFilms,\n} as const);\n\nexport const resetFilmsPerPage = () => ({\n  type: ActionType.ResetFilmsPerPage,\n} as const);\n\nexport const loadFilms = (films: Films) => ({\n  type: ActionType.LoadFilms,\n  payload: {\n    films,\n  },\n} as const);\n\nexport const loadFilm = (currentFilm: Film) => ({\n  type: ActionType.LoadFilm,\n  payload: {\n    currentFilm,\n  },\n} as const);\n\nexport const requireAuthorization = (authStatus: AuthorizationStatus) => ({\n  type: ActionType.RequireAuthorization,\n  payload: authStatus,\n} as const);\n\nexport const requireLogout = () => ({\n  type: ActionType.RequireLogout,\n} as const);\n\nexport const redirectToRoute = (url: string) => ({\n  type: ActionType.RedirectToRoute,\n  payload: url,\n} as const);\n\nexport const saveUserAvatar = (userAvatar: string) => ({\n  type: ActionType.SaveUserAvatar,\n  payload: userAvatar,\n} as const);\n\nexport const dropUserAvatar = () => ({\n  type: ActionType.DropUserAvatar,\n} as const);\n\nexport const setLoginError = (loginError: string) => ({\n  type: ActionType.SetLoginError,\n  payload: loginError,\n} as const);\n\nexport const setCurrentPlayerTime = (currentPlayerTime: number) => ({\n  type: ActionType.SetCurrentPlayerTime,\n  payload: currentPlayerTime,\n} as const);\n\nexport const setVideoDuration = (videoDuration: number) => ({\n  type: ActionType.SetVideoDuration,\n  payload: videoDuration,\n} as const);\n\nexport const loadPromo = (promo: Film) => ({\n  type: ActionType.LoadPromo,\n  payload: {\n    promo,\n  },\n} as const);\n","import axios, {AxiosError, AxiosInstance, AxiosRequestConfig, AxiosResponse} from 'axios';\n\nimport {getToken} from './token';\nimport { noAuthAction } from '../store/api-actions';\n\nconst BACKEND_URL = 'https://8.react.pages.academy/wtw';\nconst REQUEST_TIMEOUT = 5000;\n\nexport enum HttpCode {\n  BadRequest = 400,\n  Unauthorized = 401,\n  NotFound = 404,\n}\n\ntype UnauthorizedCallback = () => void;\n\nconst createAPI = (onUnauthorized: UnauthorizedCallback): AxiosInstance => {\n  const api = axios.create({\n    baseURL: BACKEND_URL,\n    timeout: REQUEST_TIMEOUT,\n  });\n\n  api.interceptors.response.use(\n    (response: AxiosResponse) => response,\n\n    (error: AxiosError) => {\n      const {response} = error;\n\n      if (response?.status === HttpCode.Unauthorized) {\n        onUnauthorized();\n      }\n\n      return Promise.reject(error);\n    },\n  );\n\n  api.interceptors.request.use(\n    (config: AxiosRequestConfig) => {\n      const token = getToken();\n\n      if (token) {\n        config.headers['x-token'] = token;\n      }\n\n      return config;\n    },\n  );\n\n  return api;\n};\n\nconst api = createAPI(\n  () => noAuthAction(),\n);\n\nexport default api;\n","const EMPTY_EMAIL_MESSAGE = 'Please enter a valid email address';\nconst EMPTY_PASSWORD_MESSAGE = 'We can’t recognize this email and password combination. Please try again.';\n\nexport const getLoginError = (email: string, password: string): string => {\n\n  if (email === '') {\n    return EMPTY_EMAIL_MESSAGE;\n  }\n\n  return EMPTY_PASSWORD_MESSAGE;\n\n};\n","import {APIRoute, APIRouteById, AppRoute, AuthorizationStatus, Links} from '../const';\nimport {FilmFromServer, FilmsFromServer} from '../types/film';\nimport {adaptFilmToClient, adaptFilmsToClient} from '../utils/adapter/film';\nimport {dropToken, saveToken} from '../services/token';\nimport {dropUserAvatar, loadFilm, loadFilms, loadPromo, redirectToRoute, requireAuthorization, requireLogout, saveUserAvatar, setLoginError} from './action';\n\nimport {AuthData} from '../types/auth-data';\nimport {AuthInfoFromServer} from '../types/auth-info';\nimport {CommentPost} from '../types/review';\nimport {HttpCode} from '../services/api';\nimport {ThunkActionResult} from '../types/action';\nimport {adaptAuthInfoToClient} from '../utils/adapter/auth-info';\nimport axios from 'axios';\nimport {getLoginError} from '../utils/auth-errors';\n\nexport const fetchFilmsAction = (): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    try {\n      const {data} = await api.get<FilmsFromServer>(APIRoute.Films);\n      dispatch(loadFilms(adaptFilmsToClient(data)));\n    } catch (error: unknown) {\n      if (axios.isAxiosError(error)) {\n        if (error.response?.status === HttpCode.NotFound) {\n          dispatch(redirectToRoute(AppRoute.NotFound));\n        }\n      }\n    }\n  };\n\nexport const fetchCurrentFilmAction = (filmId: number): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    try {\n      const {data} = await api.get<FilmFromServer>(APIRouteById.FilmById(filmId));\n      dispatch(loadFilm(adaptFilmToClient(data)));\n    } catch (error: unknown) {\n      if (axios.isAxiosError(error)) {\n        if (error.response?.status === HttpCode.NotFound) {\n          dispatch(redirectToRoute(AppRoute.NotFound));\n        }\n      }\n    }\n  };\n\nexport const checkAuthAction = (): ThunkActionResult =>\n  async (dispatch, _getState, api) => {\n    try {\n      await api.get(APIRoute.Login);\n      dispatch(requireAuthorization(AuthorizationStatus.Auth));\n    } catch {\n      dispatch(redirectToRoute(AppRoute.SignIn));\n    }\n  };\n\nexport const loginAction = ({login: email, password}: AuthData): ThunkActionResult =>\n  async (dispatch, _getState, api) => {\n    try {\n      const dataFromServer = await api.post<AuthInfoFromServer>(APIRoute.Login, {email, password});\n      const adaptedAuthInfo = adaptAuthInfoToClient(dataFromServer.data);\n      saveToken(adaptedAuthInfo.token);\n      dispatch(requireAuthorization(AuthorizationStatus.Auth));\n      dispatch(redirectToRoute(AppRoute.Main));\n      dispatch(saveUserAvatar(adaptedAuthInfo.avatarUrl));\n    } catch (error: unknown) {\n      if (axios.isAxiosError(error)) {\n        if (error.response?.status === HttpCode.BadRequest) {\n          dispatch(setLoginError(getLoginError(email, password)));\n        }\n      }\n    }\n  };\n\nexport const logoutAction = (): ThunkActionResult =>\n  async (dispatch, _getState, api) => {\n    api.delete(APIRoute.Logout);\n    dropToken();\n    dispatch(requireLogout());\n    dispatch(dropUserAvatar());\n  };\n\nexport const commentPostAction = (filmId: number, {rating, comment}: CommentPost): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    try {\n      await api.post<CommentPost>(APIRouteById.CommentPostByFilmId(filmId), {rating, comment});\n      dispatch(redirectToRoute(Links.ReviewsFilmById(filmId)));\n    } catch (error: unknown){\n      if (axios.isAxiosError(error)) {\n        if (error.response?.status === HttpCode.Unauthorized) {\n          dispatch(redirectToRoute(AppRoute.SignIn));\n        }\n      }\n    }\n  };\n\nexport const fetchPromoAction = (): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    try {\n      const {data} = await api.get<FilmFromServer>(APIRoute.Promo);\n      dispatch(loadPromo(adaptFilmToClient(data)));\n    } catch (error: unknown) {\n      if (axios.isAxiosError(error)) {\n        if (error.response?.status === HttpCode.NotFound) {\n          dispatch(redirectToRoute(AppRoute.NotFound));\n        }\n      }\n    }\n  };\n\nexport const changeFavoriteStatusAction = (filmId: number, favoriteStatus: number): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    try {\n      await api.post(APIRouteById.ChangeFavoriteStatusByFilmId(filmId, favoriteStatus));\n    } catch (error: unknown) {\n      if (axios.isAxiosError(error)) {\n        if (error.response?.status === HttpCode.Unauthorized) {\n          dispatch(redirectToRoute(AppRoute.SignIn));\n        }\n      }\n    }\n  };\n\nexport const noAuthAction = (): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    try {\n      dispatch(requireAuthorization(AuthorizationStatus.Auth));\n      dispatch(redirectToRoute(AppRoute.SignIn));\n    } catch (error: unknown) {\n      if (axios.isAxiosError(error)) {\n        if (error.response?.status === HttpCode.NotFound) {\n          dispatch(redirectToRoute(AppRoute.NotFound));\n        }\n      }\n    }\n  };\n","import {RATING_VALUES} from '../../const';\n\nfunction RatingList(): JSX.Element {\n\n  return (\n    <div className=\"rating__stars\">\n      {RATING_VALUES.map((ratingValue: number) =>\n        (\n          <>\n            <input className=\"rating__input\" id={`star-${ratingValue}`} type=\"radio\" name=\"rating\" value={ratingValue}/>\n            <label className=\"rating__label\" htmlFor={`star-${ratingValue}`}>Rating {ratingValue}</label>\n          </>\n        ))}\n    </div>\n  );\n}\n\nexport default RatingList;\n","import {ChangeEvent, FormEvent, useState} from 'react';\nimport {ConnectedProps, connect} from 'react-redux';\n\nimport {CommentPost} from '../../types/review';\nimport RatingList from '../rating-list/rating-list';\nimport { ReviewTextLength } from '../../const';\nimport {ThunkAppDispatch} from '../../types/action';\nimport {commentPostAction} from '../../store/api-actions';\nimport {useParams} from 'react-router';\n\nconst mapDispatchToProps = (dispatch: ThunkAppDispatch) => ({\n  onSubmit(filmId: number, commentPost: CommentPost) {\n    dispatch(commentPostAction(filmId, commentPost));\n  },\n});\n\nconst connector = connect(null, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nfunction AddReviewForm(props: PropsFromRedux): JSX.Element {\n  const {onSubmit} = props;\n\n  const {id} = useParams<{id: string}>();\n\n  const [reviewText, setReviewText] = useState('');\n  const [ratingValue, setRatingValue] = useState(0);\n\n  const handleRatingInput = ({target}: ChangeEvent<HTMLInputElement>) => {\n    setRatingValue(Number(target.value));\n  };\n\n  const handleTextInput = ({target}: ChangeEvent<HTMLTextAreaElement>) => {\n    setReviewText(target.value);\n  };\n\n  const handleSubmit = (evt: FormEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n\n    onSubmit(\n      Number(id),\n      {\n        rating: ratingValue,\n        comment: reviewText,\n      },\n    );\n  };\n\n  return (\n    <form\n      action=\"#\"\n      className=\"add-review__form\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"rating\"\n        onChange={handleRatingInput}\n      >\n        <RatingList />\n      </div>\n\n      <div className=\"add-review__text\">\n        <textarea\n          className=\"add-review__textarea\"\n          name=\"review-text\"\n          id=\"review-text\"\n          placeholder=\"Review text\"\n          minLength={ReviewTextLength.Min}\n          maxLength={ReviewTextLength.Max}\n          onChange={handleTextInput}\n        >\n        </textarea>\n        <div className=\"add-review__submit\">\n          <button\n            className=\"add-review__btn\"\n            type=\"submit\"\n            disabled={ratingValue === 0 || reviewText.length < ReviewTextLength.Min || reviewText.length > ReviewTextLength.Max}\n          >\n            Post\n          </button>\n        </div>\n\n      </div>\n    </form>\n  );\n}\n\nexport {AddReviewForm};\nexport default connector(AddReviewForm);\n","import {ConnectedProps, connect} from 'react-redux';\nimport {resetFilmsPerPage, resetGenre} from '../../store/action';\n\nimport {Actions} from '../../types/action';\nimport {AppRoute} from '../../const';\nimport {Dispatch} from 'redux';\nimport {Link} from 'react-router-dom';\n\nconst mapDispatchToProps = (dispatch: Dispatch<Actions>) => ({\n  onResetGenre() {\n    dispatch(resetGenre());\n  },\n  onResetFilmsPerPage() {\n    dispatch(resetFilmsPerPage());\n  },\n});\n\nconst connector = connect(null, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nfunction Logo(props: PropsFromRedux): JSX.Element {\n  const {onResetGenre, onResetFilmsPerPage} = props;\n\n  return (\n    <Link to={AppRoute.Main} className=\"logo__link\"\n\n      onClick={() => {\n        onResetGenre();\n        onResetFilmsPerPage();\n      }}\n    >\n      <span className=\"logo__letter logo__letter--1\">W</span>\n      <span className=\"logo__letter logo__letter--2\">T</span>\n      <span className=\"logo__letter logo__letter--3\">W</span>\n    </Link>\n  );\n}\n\nexport {Logo};\nexport default connector(Logo);\n","import {AppRoute} from '../../const';\nimport {Link} from 'react-router-dom';\n\nfunction NotFoundScreen(): JSX.Element {\n  return (\n    <section>\n      <h1>404 Not Found</h1>\n      <Link to={AppRoute.Main}>Вернуться на главную</Link>\n    </section>\n  );\n}\n\nexport default NotFoundScreen;\n","import {combineReducers} from 'redux';\nimport {filmData} from './film-data/film-data';\nimport {filmSearch} from './film-search/film-search';\nimport {userProcess} from './user-process/user-process';\n\nexport enum NameSpace {\n  data = 'DATA',\n  films = 'FILMS',\n  user = 'USER',\n}\n\nexport const rootReducer = combineReducers({\n  [NameSpace.data]: filmData,\n  [NameSpace.films]: filmSearch,\n  [NameSpace.user]: userProcess,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import {ActionType, Actions} from '../../types/action';\n\nimport {FilmData} from '../../types/state';\n\nconst initialState: FilmData = {\n  films: [],\n  isDataLoaded: false,\n};\n\nconst filmData = (state = initialState, action: Actions): FilmData => {\n  switch (action.type) {\n    case ActionType.LoadFilms: {\n      const {films} = action.payload;\n      return {...state, films, isDataLoaded: true};\n    }\n    case ActionType.LoadFilm: {\n      const {currentFilm} = action.payload;\n      return {...state, currentFilm};\n    }\n    case ActionType.LoadPromo: {\n      const {promo} = action.payload;\n      return {...state, promo};\n    }\n    default:\n      return state;\n  }\n};\n\nexport {filmData};\n","import {ALL_GENRES, FILMS_PER_PAGE_COUNT} from '../../const';\nimport {ActionType, Actions} from '../../types/action';\n\nimport {FilmSearch} from '../../types/state';\n\nconst initialState: FilmSearch = {\n  genre: ALL_GENRES,\n  filmsPerPageCount: FILMS_PER_PAGE_COUNT,\n  currentPlayerTime: 0,\n  videoDuration: 0,\n};\n\n\nconst filmSearch = (state = initialState, action: Actions): FilmSearch => {\n  switch (action.type) {\n    case ActionType.ChangeGenre:\n      return {...state, genre: action.payload};\n    case ActionType.ResetGenre:\n      return {...state, genre: ALL_GENRES};\n    case ActionType.ShowMoreFilms:\n      return {...state, filmsPerPageCount: state.filmsPerPageCount + FILMS_PER_PAGE_COUNT};\n    case ActionType.ResetFilmsPerPage:\n      return {...state, filmsPerPageCount: FILMS_PER_PAGE_COUNT};\n    case ActionType.SetCurrentPlayerTime:\n      return {...state, currentPlayerTime: action.payload};\n    case ActionType.SetVideoDuration:\n      return {...state, videoDuration: action.payload};\n    default:\n      return state;\n  }\n};\n\nexport {filmSearch};\n","import {ActionType, Actions} from '../../types/action';\n\nimport {AuthorizationStatus} from '../../const';\nimport {UserProcess} from '../../types/state';\n\nconst initialState: UserProcess = {\n  authorizationStatus: AuthorizationStatus.Unknown,\n  userAvatar: '',\n  loginError: undefined,\n};\n\nconst userProcess = (state = initialState, action: Actions): UserProcess => {\n  switch (action.type) {\n    case ActionType.RequireAuthorization:\n      return {...state, authorizationStatus: action.payload};\n    case ActionType.RequireLogout:\n      return {...state, authorizationStatus: AuthorizationStatus.NoAuth};\n    case ActionType.SaveUserAvatar:\n      return {...state, userAvatar: action.payload};\n    case ActionType.DropUserAvatar:\n      return {...state, userAvatar: ''};\n    case ActionType.SetLoginError:\n      return {...state, loginError: action.payload};\n    default:\n      return state;\n  }\n};\n\nexport {userProcess};\n","import {AuthorizationStatus} from '../../const';\nimport {NameSpace} from '../root-reducer';\nimport {State} from '../../types/state';\n\nexport const getAuthorizationStatus = (state: State): AuthorizationStatus => state[NameSpace.user].authorizationStatus;\nexport const getUserAvatar = (state: State): string => state[NameSpace.user].userAvatar;\nexport const getLoginError = (state: State): string | undefined => state[NameSpace.user].loginError;\n","import {AppRoute, AuthorizationStatus} from '../../const';\nimport {ConnectedProps, connect} from 'react-redux';\nimport {getAuthorizationStatus, getUserAvatar} from '../../store/user-process/selectors';\n\nimport {Link} from 'react-router-dom';\nimport {State} from '../../types/state';\nimport {ThunkAppDispatch} from '../../types/action';\nimport {logoutAction} from '../../store/api-actions';\n\nconst mapStateToProps = (state: State) => ({\n  authorizationStatus: getAuthorizationStatus(state),\n  userAvatar: getUserAvatar(state),\n});\n\nconst mapDispatchToProps = (dispatch: ThunkAppDispatch) => ({\n  signOut() {\n    dispatch(logoutAction());\n  },\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nfunction UserBlock(props: PropsFromRedux): JSX.Element {\n  const {authorizationStatus, signOut, userAvatar} = props;\n\n  if (authorizationStatus === AuthorizationStatus.Auth) {\n    return (\n      <ul className=\"user-block\">\n        <li className=\"user-block__item\">\n          <div className=\"user-block__avatar\">\n            <Link to={AppRoute.MyList}>\n              <img src={userAvatar} alt=\"User avatar\" width=\"63\" height=\"63\" />\n            </Link>\n          </div>\n        </li>\n        <li className=\"user-block__item\">\n          <Link to={AppRoute.SignIn}\n            className=\"user-block__link\"\n            onClick={(evt) => {\n              evt.preventDefault();\n\n              signOut();\n            }}\n          >\n            Sign out\n          </Link>\n        </li>\n      </ul>\n    );\n  }\n\n  return (\n    <ul className=\"user-block\">\n      <li className=\"user-block__item\">\n        <Link to={AppRoute.SignIn} className=\"user-block__link\">Sign in</Link>\n      </li>\n    </ul>\n  );\n}\n\nexport {UserBlock};\nexport default connector(UserBlock);\n","import {Film, Films} from '../../types/film';\n\nimport {NameSpace} from '../root-reducer';\nimport {State} from '../../types/state';\n\nexport const getFilms = (state: State): Films => state[NameSpace.data].films;\nexport const getLoadedDataStatus = (state: State): boolean => state[NameSpace.data].isDataLoaded;\nexport const getCurrentFilm = (state: State): Film | undefined => state[NameSpace.data].currentFilm;\nexport const getPromo = (state: State): Film | undefined => state[NameSpace.data].promo;\n","import {ConnectedProps, connect} from 'react-redux';\n\nimport AddReviewForm from '../add-review-form/add-review-form';\nimport {Link} from 'react-router-dom';\nimport {Links} from '../../const';\nimport Logo from '../logo/logo';\nimport NotFoundScreen from '../not-found-screen/not-found-screen';\nimport {State} from '../../types/state';\nimport {ThunkAppDispatch} from '../../types/action';\nimport UserBlock from '../user-block/user-block';\nimport {fetchCurrentFilmAction} from '../../store/api-actions';\nimport { getCurrentFilm } from '../../store/film-data/selectors';\nimport {useEffect} from 'react';\nimport {useParams} from 'react-router';\n\nconst mapStateToProps = (state: State) => ({\n  film: getCurrentFilm(state),\n});\n\nconst mapDispatchToProps = (dispatch: ThunkAppDispatch) => ({\n  fetchCurrentFilm(id: number) {\n    dispatch(fetchCurrentFilmAction(id));\n  },\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nfunction AddReviewScreen(props: PropsFromRedux): JSX.Element {\n  const {film, fetchCurrentFilm} = props;\n  const {id} = useParams<{id: string}>();\n\n  useEffect(() => {\n    fetchCurrentFilm(Number(id));\n  }, [fetchCurrentFilm, id]);\n\n  if (!film) {\n    return <NotFoundScreen />;\n  }\n\n  return (\n    <section className=\"film-card film-card--full\">\n      <div className=\"film-card__header\">\n        <div className=\"film-card__bg\">\n          <img src={film.backgroundImage} alt={film.name} />\n        </div>\n\n        <h1 className=\"visually-hidden\">WTW</h1>\n\n        <header className=\"page-header\">\n          <div className=\"logo\">\n            <Logo />\n          </div>\n\n          <nav className=\"breadcrumbs\">\n            <ul className=\"breadcrumbs__list\">\n              <li className=\"breadcrumbs__item\">\n                <Link to={Links.OverviewFilmById(film.id)} className=\"breadcrumbs__link\">{film.name}</Link>\n              </li>\n              <li className=\"breadcrumbs__item\">\n                <a className=\"breadcrumbs__link\" href=\"/\">Add review</a>\n              </li>\n            </ul>\n          </nav>\n\n          <UserBlock />\n\n        </header>\n\n        <div className=\"film-card__poster film-card__poster--small\">\n          <img src={film.posterImage} alt={`${film.name} poster`} width=\"218\" height=\"327\" />\n        </div>\n      </div>\n\n      <div className=\"add-review\">\n        <AddReviewForm />\n      </div>\n\n    </section>\n  );\n\n}\n\nexport {AddReviewScreen};\nexport default connector(AddReviewScreen);\n","import './loading-screen.css';\n\nfunction LoadingScreen(): JSX.Element {\n  return (\n    <div className=\"loader_styles\">\n      <div className=\"loader_message\"> Идёт загрузка</div>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n        style={{margin: 'auto', background: 'transparent', display: 'block', shapeRendering: 'auto'}}\n        width=\"200px\"\n        height=\"200px\"\n        viewBox=\"0 0 100 100\"\n        preserveAspectRatio=\"xMidYMid\"\n      >\n        <g transform=\"rotate(0 50 50)\">\n          <rect x=\"47\" y=\"2\" rx=\"3\" ry=\"6\" width=\"6\" height=\"12\" fill=\"#2a2d30\">\n            <animate\n              attributeName=\"opacity\"\n              values=\"1;0\"\n              keyTimes=\"0;1\"\n              dur=\"1s\"\n              begin=\"-0.9166666666666666s\"\n              repeatCount=\"indefinite\"\n            >\n            </animate>\n          </rect>\n        </g>\n        <g transform=\"rotate(30 50 50)\">\n          <rect x=\"47\" y=\"2\" rx=\"3\" ry=\"6\" width=\"6\" height=\"12\" fill=\"#2a2d30\">\n            <animate\n              attributeName=\"opacity\"\n              values=\"1;0\"\n              keyTimes=\"0;1\"\n              dur=\"1s\"\n              begin=\"-0.8333333333333334s\"\n              repeatCount=\"indefinite\"\n            >\n            </animate>\n          </rect>\n        </g>\n        <g transform=\"rotate(60 50 50)\">\n          <rect x=\"47\" y=\"2\" rx=\"3\" ry=\"6\" width=\"6\" height=\"12\" fill=\"#2a2d30\">\n            <animate\n              attributeName=\"opacity\"\n              values=\"1;0\"\n              keyTimes=\"0;1\"\n              dur=\"1s\"\n              begin=\"-0.75s\"\n              repeatCount=\"indefinite\"\n            >\n            </animate>\n          </rect>\n        </g>\n        <g transform=\"rotate(90 50 50)\">\n          <rect x=\"47\" y=\"2\" rx=\"3\" ry=\"6\" width=\"6\" height=\"12\" fill=\"#2a2d30\">\n            <animate\n              attributeName=\"opacity\"\n              values=\"1;0\"\n              keyTimes=\"0;1\"\n              dur=\"1s\"\n              begin=\"-0.6666666666666666s\"\n              repeatCount=\"indefinite\"\n            >\n            </animate>\n          </rect>\n        </g>\n        <g transform=\"rotate(120 50 50)\">\n          <rect x=\"47\" y=\"2\" rx=\"3\" ry=\"6\" width=\"6\" height=\"12\" fill=\"#2a2d30\">\n            <animate\n              attributeName=\"opacity\"\n              values=\"1;0\"\n              keyTimes=\"0;1\"\n              dur=\"1s\"\n              begin=\"-0.5833333333333334s\"\n              repeatCount=\"indefinite\"\n            >\n            </animate>\n          </rect>\n        </g>\n        <g transform=\"rotate(150 50 50)\">\n          <rect x=\"47\" y=\"2\" rx=\"3\" ry=\"6\" width=\"6\" height=\"12\" fill=\"#2a2d30\">\n            <animate\n              attributeName=\"opacity\"\n              values=\"1;0\"\n              keyTimes=\"0;1\"\n              dur=\"1s\"\n              begin=\"-0.5s\"\n              repeatCount=\"indefinite\"\n            >\n            </animate>\n          </rect>\n        </g>\n        <g transform=\"rotate(180 50 50)\">\n          <rect x=\"47\" y=\"2\" rx=\"3\" ry=\"6\" width=\"6\" height=\"12\" fill=\"#2a2d30\">\n            <animate\n              attributeName=\"opacity\"\n              values=\"1;0\"\n              keyTimes=\"0;1\"\n              dur=\"1s\"\n              begin=\"-0.4166666666666667s\"\n              repeatCount=\"indefinite\"\n            >\n            </animate>\n          </rect>\n        </g>\n        <g transform=\"rotate(210 50 50)\">\n          <rect x=\"47\" y=\"2\" rx=\"3\" ry=\"6\" width=\"6\" height=\"12\" fill=\"#2a2d30\">\n            <animate\n              attributeName=\"opacity\"\n              values=\"1;0\"\n              keyTimes=\"0;1\"\n              dur=\"1s\"\n              begin=\"-0.3333333333333333s\"\n              repeatCount=\"indefinite\"\n            >\n            </animate>\n          </rect>\n        </g>\n        <g transform=\"rotate(240 50 50)\">\n          <rect x=\"47\" y=\"2\" rx=\"3\" ry=\"6\" width=\"6\" height=\"12\" fill=\"#2a2d30\">\n            <animate\n              attributeName=\"opacity\"\n              values=\"1;0\"\n              keyTimes=\"0;1\"\n              dur=\"1s\"\n              begin=\"-0.25s\"\n              repeatCount=\"indefinite\"\n            >\n            </animate>\n          </rect>\n        </g>\n        <g transform=\"rotate(270 50 50)\">\n          <rect x=\"47\" y=\"2\" rx=\"3\" ry=\"6\" width=\"6\" height=\"12\" fill=\"#2a2d30\">\n            <animate\n              attributeName=\"opacity\"\n              values=\"1;0\"\n              keyTimes=\"0;1\"\n              dur=\"1s\"\n              begin=\"-0.16666666666666666s\"\n              repeatCount=\"indefinite\"\n            >\n            </animate>\n          </rect>\n        </g>\n        <g transform=\"rotate(300 50 50)\">\n          <rect x=\"47\" y=\"2\" rx=\"3\" ry=\"6\" width=\"6\" height=\"12\" fill=\"#2a2d30\">\n            <animate\n              attributeName=\"opacity\"\n              values=\"1;0\"\n              keyTimes=\"0;1\"\n              dur=\"1s\"\n              begin=\"-0.08333333333333333s\"\n              repeatCount=\"indefinite\"\n            >\n            </animate>\n          </rect>\n        </g>\n        <g transform=\"rotate(330 50 50)\">\n          <rect x=\"47\" y=\"2\" rx=\"3\" ry=\"6\" width=\"6\" height=\"12\" fill=\"#2a2d30\">\n            <animate\n              attributeName=\"opacity\"\n              values=\"1;0\"\n              keyTimes=\"0;1\"\n              dur=\"1s\"\n              begin=\"0s\"\n              repeatCount=\"indefinite\"\n            >\n            </animate>\n          </rect>\n        </g>\n      </svg>\n    </div>\n  );\n}\n\nexport default LoadingScreen;\n","import {ConnectedProps, connect} from 'react-redux';\nimport {setCurrentPlayerTime, setVideoDuration} from '../../store/action';\nimport {useEffect, useRef, useState} from 'react';\n\nimport LoadingScreen from '../loading-screen/loading-screen';\nimport {ThunkAppDispatch} from '../../types/action';\n\nconst PREVIEW_HOVER_TIMEOUT = 1000;\nconst PLAYER_INTERVAL_TIMEOUT = 1000;\n\ntype VideoPlayerProps = {\n  previewImage: string;\n  src: string;\n  muted: boolean;\n  isActive: boolean;\n  className?: string;\n  isFilmScreen?: boolean;\n  isFullScreen?: boolean;\n}\n\nconst mapDispatchToProps = (dispatch: ThunkAppDispatch) => ({\n  onFilmPlay(currentTime: number) {\n    dispatch(setCurrentPlayerTime(currentTime));\n  },\n  onFilmChange(videoDuration: number) {\n    dispatch(setVideoDuration(videoDuration));\n  },\n});\n\nconst connector = connect(null, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\ntype ConnectedComponentProps = PropsFromRedux & VideoPlayerProps;\n\nfunction VideoPlayer({previewImage, src, muted, isActive, className, isFilmScreen, isFullScreen, onFilmPlay, onFilmChange}: ConnectedComponentProps): JSX.Element {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const isPlaying = isActive;\n\n  const videoRef = useRef<HTMLVideoElement | null>(null);\n\n  useEffect(() => {\n    if (videoRef.current !== null) {\n      videoRef.current.onloadeddata = () => {\n        if (videoRef.current !== null) {\n          onFilmChange(videoRef.current.duration);\n        }\n      };\n    }\n\n    if (isFilmScreen && videoRef.current !== null) {\n      onFilmChange(videoRef.current.duration);\n\n      videoRef.current.play();\n    }\n\n    return () => {\n      if (videoRef.current !== null) {\n        videoRef.current.onloadeddata = null;\n        videoRef.current = null;\n      }\n    };\n  }, [isFilmScreen, onFilmChange, src]);\n\n  useEffect(() => {\n    if (videoRef.current === null) {\n      return;\n    }\n\n    if (!isFilmScreen) {\n      if (isPlaying) {\n        const id = setTimeout(() => {\n          if (videoRef.current !== null) {\n            videoRef.current.play();\n          }\n        }, PREVIEW_HOVER_TIMEOUT);\n\n        return () => clearTimeout(id);\n      }\n\n      videoRef.current.load();\n    }\n\n    if (isPlaying) {\n      videoRef.current.play();\n      const id = setInterval(() => {\n        if (videoRef.current === null) {\n          return;\n        }\n        onFilmPlay(videoRef.current.currentTime);\n      }, PLAYER_INTERVAL_TIMEOUT);\n      return () => clearTimeout(id);\n    }\n\n    videoRef.current.pause();\n\n\n  }, [isFilmScreen, isPlaying, onFilmPlay]);\n\n  useEffect(() => {\n    if (videoRef.current !== null) {\n      muted ? videoRef.current.muted = true : videoRef.current.muted = false;\n    }\n  }, [muted]);\n\n  useEffect(() => {\n    if (videoRef.current === null) {\n      return;\n    }\n\n    if (isFullScreen) {\n      videoRef.current.requestFullscreen();\n    }\n\n  }, [isFullScreen]);\n\n  return (\n    <>\n      {!isLoaded && <LoadingScreen />}\n      <video className={className} src={src} ref={videoRef} poster={previewImage} onCanPlayThrough={() => setIsLoaded(true)} />\n    </>\n  );\n}\n\nexport {VideoPlayer};\nexport default connector(VideoPlayer);\n","import {Film} from '../../types/film';\nimport {Link} from 'react-router-dom';\nimport {Links} from '../../const';\nimport VideoPlayer from '../video-player/video-player';\n\ntype FilmCardScreenProps = {\n  film: Film;\n  isActive: boolean;\n}\n\nfunction FilmCardScreen(props: FilmCardScreenProps): JSX.Element {\n  const {film, isActive} = props;\n  const {name, previewImage, previewVideoLink} = film;\n\n  return (\n    <>\n      <Link to={Links.OverviewFilmById(film.id)}>\n        <div className=\"small-film-card__image\">\n          <VideoPlayer src={previewVideoLink} previewImage={previewImage} muted isActive={isActive}/>\n        </div>\n      </Link>\n      <h3 className=\"small-film-card__title\">\n        <Link to={Links.OverviewFilmById(film.id)} className=\"small-film-card__link\">{name}</Link>\n      </h3>\n    </>\n  );\n}\n\nexport default FilmCardScreen;\n","import FilmCardScreen from '../film-card-screen/film-card-screen';\nimport {Films} from '../../types/film';\nimport {useState} from 'react';\n\ntype FilmListProps = {\n  films: Films;\n  filmsPerPageCount: number;\n}\n\nfunction FilmList(props: FilmListProps): JSX.Element {\n  const {films, filmsPerPageCount} = props;\n\n  const [activeCard, setActiveCard] = useState({});\n\n  return (\n    <div className=\"catalog__films-list\">\n      {films.slice(0, filmsPerPageCount).map((film, id) => {\n        const keyValue = `${id}`;\n\n        return (\n\n          <article key={keyValue} className=\"small-film-card catalog__films-card\"\n            onMouseEnter={() => {\n              setActiveCard(film);\n            }}\n            onMouseLeave={() => {\n              setActiveCard([{}]);\n            }}\n          >\n            <FilmCardScreen\n              film={film} isActive={film === activeCard}\n            />\n\n          </article>\n\n        );\n      })}\n    </div>\n  );\n}\n\nexport default FilmList;\n","import {ConnectedProps, connect} from 'react-redux';\nimport {useLocation, useParams} from 'react-router';\n\nimport { AppRoute } from '../../const';\nimport {State} from '../../types/state';\nimport {ThunkAppDispatch} from '../../types/action';\nimport {changeFavoriteStatusAction} from '../../store/api-actions';\nimport { getPromo } from '../../store/film-data/selectors';\nimport {useState} from 'react';\n\ntype MyListButtonProps = {\n  isFavorite: boolean;\n}\n\nconst mapStateToProps = (state: State) => ({\n  promo: getPromo(state),\n});\n\nconst mapDispatchToProps = (dispatch: ThunkAppDispatch) => ({\n  onFavoriteButtonClick(filmId: number, favoriteStatus: number) {\n    dispatch(changeFavoriteStatusAction(filmId, favoriteStatus));\n  },\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\ntype ConnectedComponentProps = PropsFromRedux & MyListButtonProps;\n\nfunction MyListButton(props: ConnectedComponentProps): JSX.Element {\n  const {onFavoriteButtonClick, isFavorite, promo} = props;\n\n  const {id} = useParams<{id: string}>();\n  let currentId = Number(id);\n  const {pathname} = useLocation<{pathname: string}>();\n\n  if (pathname === AppRoute.Main && promo) {\n    currentId = promo.id;\n  }\n\n  const [favoriteStatus, setFavoriteStatus] = useState(isFavorite);\n\n  const handleClick = () => {\n    onFavoriteButtonClick(currentId, Number(!favoriteStatus));\n    setFavoriteStatus(!favoriteStatus);\n  };\n\n  return (\n    <button\n      className=\"btn btn--list film-card__button\"\n      type=\"button\"\n      onClick={handleClick}\n    >\n      <svg viewBox=\"0 0 19 20\" width=\"19\" height=\"20\">\n        <use xlinkHref={favoriteStatus ? '#in-list' : '#add'}></use>\n      </svg>\n      <span>My list</span>\n    </button>\n  );\n}\n\nexport {MyListButton};\nexport default connector(MyListButton);\n","import {Film} from '../../types/film';\n\ntype TabDetailsProps = {\n  film: Film;\n}\n\nfunction TabDetails(props: TabDetailsProps): JSX.Element {\n  const {film} = props;\n\n  return (\n    <div className=\"film-card__text film-card__row\">\n      <div className=\"film-card__text-col\">\n        <p className=\"film-card__details-item\">\n          <strong className=\"film-card__details-name\">Director</strong>\n          <span className=\"film-card__details-value\">{film.director}</span>\n        </p>\n        <p className=\"film-card__details-item\">\n          <strong className=\"film-card__details-name\">Starring</strong>\n          <span className=\"film-card__details-value\">{(film.starring).join(', \\u0085')}</span>\n        </p>\n      </div>\n\n      <div className=\"film-card__text-col\">\n        <p className=\"film-card__details-item\">\n          <strong className=\"film-card__details-name\">Run Time</strong>\n          <span className=\"film-card__details-value\">{Math.floor(film.runTime / 60)}h {film.runTime % 60}m</span>\n        </p>\n        <p className=\"film-card__details-item\">\n          <strong className=\"film-card__details-name\">Genre</strong>\n          <span className=\"film-card__details-value\">{film.genre}</span>\n        </p>\n        <p className=\"film-card__details-item\">\n          <strong className=\"film-card__details-name\">Released</strong>\n          <span className=\"film-card__details-value\">{film.released}</span>\n        </p>\n      </div>\n    </div>\n\n  );\n}\n\nexport default TabDetails;\n","import {ALL_GENRES, RatingBoundaryValue, RatingText} from '../const';\n\nimport {Films} from '../types/film';\nimport dayjs from 'dayjs';\nimport duration from 'dayjs/plugin/duration';\n\ndayjs.extend(duration);\n\nexport const getFilmsByGenre = (genre: string, films: Films): Films => {\n\n  if (genre === ALL_GENRES) {\n    return films;\n  }\n\n  return films.filter((film) => film.genre === genre);\n};\n\nexport const getElapsedTime = (currentTimeInSeconds: number, durationInSeconds: number): string => {\n  if (durationInSeconds < 60 * 60) {\n    return dayjs.duration((Math.floor(durationInSeconds - currentTimeInSeconds)), 'seconds').format('-mm:ss');\n  }\n\n  return dayjs.duration((Math.floor(durationInSeconds - currentTimeInSeconds)), 'seconds').format('-HH:mm:ss');\n};\n\nexport const getPlayerProgress = (currentTimeInSeconds: number, durationInSeconds: number): string => `${((currentTimeInSeconds) / durationInSeconds) * 100}%`;\n\nexport const getRatingText = (rating: number): string => {\n  if (rating < RatingBoundaryValue.Bad) {\n    return RatingText.Bad;\n  } else if (rating < RatingBoundaryValue.Normal) {\n    return RatingText.Normal;\n  } else if (rating < RatingBoundaryValue.Good) {\n    return RatingText.Good;\n  } else if (rating < RatingBoundaryValue.VeryGood) {\n    return RatingText.VeryGood;\n  } else if (rating === RatingBoundaryValue.VeryGood) {\n    return RatingText.Awesome;\n  } else {\n    return '';\n  }\n};\n","import {Film} from '../../types/film';\nimport { getRatingText } from '../../utils/films';\n\ntype TabOverviewProps = {\n  film: Film;\n}\n\nfunction TabOverview(props: TabOverviewProps): JSX.Element {\n  const {film} = props;\n\n  return (\n    <>\n      <div className=\"film-rating\">\n        <div className=\"film-rating__score\">{film.rating}</div>\n        <p className=\"film-rating__meta\">\n          <span className=\"film-rating__level\">{getRatingText(film.rating)}</span>\n          <span className=\"film-rating__count\">{film.scoresCount} ratings</span>\n        </p>\n      </div>\n\n      <div className=\"film-card__text\">\n        <p>{film.description}</p>\n\n\n        <p className=\"film-card__director\"><strong>Director: {film.director}</strong></p>\n\n        <p className=\"film-card__starring\"><strong>Starring: {(film.starring).join(', ')} and other</strong></p>\n      </div>\n    </>\n  );\n}\n\nexport default TabOverview;\n","import {Review} from '../../types/review';\nimport dayjs from 'dayjs';\n\ntype ReviewItemProps = {\n  review: Review;\n}\n\nfunction ReviewItem(props: ReviewItemProps): JSX.Element {\n  const {review} = props;\n\n  return (\n    <div key={review.id} className=\"review\">\n      <blockquote className=\"review__quote\">\n        <p className=\"review__text\">{review.comment}</p>\n\n        <footer className=\"review__details\">\n          <cite className=\"review__author\">{review.user.name}</cite>\n          <time className=\"review__date\" dateTime={dayjs(review.date).format('YYYY-MM-DD')}>{dayjs(review.date).format('MMMM DD, YYYY')}</time>\n        </footer>\n      </blockquote>\n\n      <div className=\"review__rating\">{review.rating.toLocaleString()}</div>\n    </div>\n  );\n}\n\nexport default ReviewItem;\n","import ReviewItem from '../review-item.tsx/review-item';\nimport {Reviews} from '../../types/review';\n\ntype TabReviewsProps = {\n  reviews: Reviews;\n}\n\nfunction TabReviews(props: TabReviewsProps): JSX.Element {\n  const {reviews} = props;\n  const reviewsForFirstColumn = reviews.filter((_, index) => index % 2 === 0);\n  const reviewsForSecondColumn = reviews.filter((_, index) => index % 2 !== 0);\n\n  return (\n    <div className=\"film-card__reviews film-card__row\">\n      <div className=\"film-card__reviews-col\">\n        {reviewsForFirstColumn.map((review) => <ReviewItem key={review.id} review={review} />)}\n      </div>\n\n      <div className=\"film-card__reviews-col\">\n        {reviewsForSecondColumn.map((review) => <ReviewItem key={review.id} review={review} />)}\n      </div>\n    </div>\n\n  );\n}\n\nexport default TabReviews;\n","import {APIRouteById, Links} from '../../const';\nimport {useEffect, useState} from 'react';\n\nimport {Film} from '../../types/film';\nimport {Link} from 'react-router-dom';\nimport {Reviews} from '../../types/review';\nimport TabDetails from '../tab-details/tab-details';\nimport TabOverview from '../tab-overview/tab-overview';\nimport TabReviews from '../tab-reviews/tab-reviews';\nimport api from '../../services/api';\nimport {useHistory} from 'react-router';\n\ntype TabsProps = {\n  film: Film;\n}\n\nfunction Tabs(props: TabsProps): JSX.Element {\n  const {film} = props;\n  const [appState, setAppState] = useState<Reviews>([]);\n\n  useEffect(() => {\n    api.get<Reviews>(APIRouteById.CommentsByFilmId(film.id)).then((response) => setAppState(response.data));\n  }, [film.id, setAppState]);\n\n  const filmReviews = appState;\n\n  const currentPath = useHistory().location.pathname;\n\n  const renderTab = (path: string) => {\n    if (path === Links.DetailsFilmById(film.id)) {\n      return <TabDetails film={film}/>;\n    } else if (path === Links.ReviewsFilmById(film.id)) {\n      return <TabReviews reviews={filmReviews}/>;\n    } else {\n      return <TabOverview film={film}/>;\n    }\n  };\n\n  const setActiveTab = (path: string) => currentPath === path ? 'film-nav__item--active' : '';\n\n  return (\n    <div className=\"film-card__desc\">\n      <nav className=\"film-nav film-card__nav\">\n        <ul className=\"film-nav__list\">\n          <li className={`film-nav__item ${setActiveTab(Links.OverviewFilmById(film.id))}`}>\n            <Link to={Links.OverviewFilmById(film.id)} className=\"film-nav__link\">Overview</Link>\n          </li>\n          <li className={`film-nav__item ${setActiveTab(Links.DetailsFilmById(film.id))}`}>\n            <Link to={Links.DetailsFilmById(film.id)} className=\"film-nav__link\">Details</Link>\n          </li>\n          <li className={`film-nav__item ${setActiveTab(Links.ReviewsFilmById(film.id))}`}>\n            <Link to={Links.ReviewsFilmById(film.id)} className=\"film-nav__link\">Reviews</Link>\n          </li>\n        </ul>\n      </nav>\n\n      {renderTab(currentPath)}\n\n    </div>\n  );\n}\n\nexport default Tabs;\n","import {NameSpace} from '../root-reducer';\nimport {State} from '../../types/state';\n\nexport const getGenre = (state: State): string => state[NameSpace.films].genre;\nexport const getFilmsPerPageCount = (state: State): number => state[NameSpace.films].filmsPerPageCount;\nexport const getCurrentPlayerTime = (state: State): number => state[NameSpace.films].currentPlayerTime;\nexport const getVideoDuration = (state: State): number => state[NameSpace.films].videoDuration;\n","import {APIRouteById, AuthorizationStatus, Links} from '../../const';\nimport {ConnectedProps, connect} from 'react-redux';\nimport {Films, FilmsFromServer} from '../../types/film';\nimport {useEffect, useState} from 'react';\n\nimport FilmList from '../film-list/film-list';\nimport {Link} from 'react-router-dom';\nimport Logo from '../logo/logo';\nimport MyListButton from '../my-list-button/my-list-button';\nimport NotFoundScreen from '../not-found-screen/not-found-screen';\nimport {State} from '../../types/state';\nimport Tabs from '../tabs/tabs';\nimport {ThunkAppDispatch} from '../../types/action';\nimport UserBlock from '../user-block/user-block';\nimport {adaptFilmsToClient} from '../../utils/adapter/film';\nimport api from '../../services/api';\nimport {fetchCurrentFilmAction} from '../../store/api-actions';\nimport {getAuthorizationStatus} from '../../store/user-process/selectors';\nimport {getCurrentFilm} from '../../store/film-data/selectors';\nimport {getFilmsPerPageCount} from '../../store/film-search/selectors';\nimport {useParams} from 'react-router';\n\nconst SIMILAR_FILMS_COUNT = 4;\n\nconst mapStateToProps = (state: State) => ({\n  filmsPerPageCount: getFilmsPerPageCount(state),\n  film: getCurrentFilm(state),\n  authorizationStatus: getAuthorizationStatus(state),\n});\n\nconst mapDispatchToProps = (dispatch: ThunkAppDispatch) => ({\n  fetchCurrentFilm(id: number) {\n    dispatch(fetchCurrentFilmAction(id));\n  },\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nfunction FilmScreen(props: PropsFromRedux): JSX.Element {\n  const {film, filmsPerPageCount, fetchCurrentFilm, authorizationStatus} = props;\n  const {id} = useParams<{id: string}>();\n\n  const [appState, setAppState] = useState<Films>([]);\n\n  useEffect(() => {\n    api.get<FilmsFromServer>(APIRouteById.SimilarFilmsById(Number(id))).then((response) => setAppState(adaptFilmsToClient(response.data)));\n    fetchCurrentFilm(Number(id));\n  }, [fetchCurrentFilm, id, setAppState]);\n\n  const similarFilms = appState.slice(0, SIMILAR_FILMS_COUNT);\n\n  if (!film) {\n    return <NotFoundScreen />;\n  }\n\n  return (\n    <>\n      <section className=\"film-card film-card--full\">\n        <div className=\"film-card__hero\">\n          <div className=\"film-card__bg\">\n            <img src={film.backgroundImage} alt={film.name} />\n          </div>\n\n          <h1 className=\"visually-hidden\">WTW</h1>\n\n          <header className=\"page-header film-card__head\">\n            <div className=\"logo\">\n              <Logo />\n            </div>\n\n            <UserBlock />\n\n          </header>\n\n          <div className=\"film-card__wrap\">\n            <div className=\"film-card__desc\">\n              <h2 className=\"film-card__title\">{film.name}</h2>\n              <p className=\"film-card__meta\">\n                <span className=\"film-card__genre\">{film.genre}</span>\n                <span className=\"film-card__year\">{film.released}</span>\n              </p>\n\n              <div className=\"film-card__buttons\">\n                <Link to={Links.PlayerById(film.id)} className=\"btn btn--play film-card__button\" type=\"button\">\n                  <svg viewBox=\"0 0 19 19\" width=\"19\" height=\"19\">\n                    <use xlinkHref=\"#play-s\"></use>\n                  </svg>\n                  <span>Play</span>\n                </Link>\n\n                <MyListButton isFavorite={film.isFavorite}/>\n\n                {authorizationStatus === AuthorizationStatus.Auth ?\n                  <Link to={Links.AddReviewByFilmId(film.id)} className=\"btn film-card__button\">Add review</Link>\n                  : ''}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"film-card__wrap film-card__translate-top\">\n          <div className=\"film-card__info\">\n            <div className=\"film-card__poster film-card__poster--big\">\n              <img src={film.posterImage} alt={`${film.name} poster`} width=\"218\" height=\"327\" />\n            </div>\n\n            <Tabs film={film}/>\n\n          </div>\n        </div>\n      </section>\n      <div className=\"page-content\">\n        <section className=\"catalog catalog--like-this\">\n          <h2 className=\"catalog__title\">More like this</h2>\n\n          <FilmList films={similarFilms} filmsPerPageCount={filmsPerPageCount}/>\n        </section>\n\n        <footer className=\"page-footer\">\n          <div className=\"logo\">\n            <a href=\"main.html\" className=\"logo__link logo__link--light\">\n              <span className=\"logo__letter logo__letter--1\">W</span>\n              <span className=\"logo__letter logo__letter--2\">T</span>\n              <span className=\"logo__letter logo__letter--3\">W</span>\n            </a>\n          </div>\n\n          <div className=\"copyright\">\n            <p>© 2019 What to watch Ltd.</p>\n          </div>\n        </footer>\n      </div>\n    </>\n  );\n\n}\n\nexport {FilmScreen};\nexport default connector(FilmScreen);\n","import {ALL_GENRES, AppRoute, GENRES_COUNT} from '../../const';\nimport {ConnectedProps, connect} from 'react-redux';\n\nimport {Actions} from '../../types/action';\nimport {Dispatch} from 'redux';\nimport {Films} from '../../types/film';\nimport {Link} from 'react-router-dom';\nimport {State} from '../../types/state';\nimport {changeGenre} from '../../store/action';\nimport {getFilms} from '../../store/film-data/selectors';\nimport {getGenre} from '../../store/film-search/selectors';\nimport {resetFilmsPerPage} from '../../store/action';\n\ntype GenreListProps = {\n  genre: string;\n}\n\nconst mapStateToProps = (state: State) => ({\n  genre: getGenre(state),\n  films: getFilms(state),\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<Actions>) => ({\n  onChangeGenre(genre: string) {\n    dispatch(changeGenre(genre));\n  },\n  onResetFilmsPerPage() {\n    dispatch(resetFilmsPerPage());\n  },\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\ntype ConnectedComponentProps = PropsFromRedux & GenreListProps;\n\nfunction GenreList(props: ConnectedComponentProps): JSX.Element {\n  const {genre, films, onChangeGenre, onResetFilmsPerPage} = props;\n\n  const genresFromFilms = (allFilms: Films): string[] => [...new Set(allFilms.map((film) => film.genre))].slice(0, GENRES_COUNT);\n  const genresList = [ALL_GENRES, ...genresFromFilms(films)];\n\n  return (\n    <ul className=\"catalog__genres-list\">\n      {genresList.map((item, id) => {\n        const keyValue = `${id}`;\n\n        return (\n          <li key={keyValue} className={`catalog__genres-item ${genre === item ? 'catalog__genres-item--active' : ''} `}\n            onClick={() => {\n              onChangeGenre(item);\n              onResetFilmsPerPage();\n            }}\n          >\n            <Link to={AppRoute.Main} className=\"catalog__genres-link\">{item}</Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nexport {GenreList};\nexport default connector(GenreList);\n","import {ConnectedProps, connect} from 'react-redux';\nimport {getFilmsPerPageCount, getGenre} from '../../store/film-search/selectors';\n\nimport {Actions} from '../../types/action';\nimport {Dispatch} from 'redux';\nimport {Films} from '../../types/film';\nimport {State} from '../../types/state';\nimport {getFilms} from '../../store/film-data/selectors';\nimport {getFilmsByGenre} from '../../utils/films';\nimport {showMoreFilms} from '../../store/action';\n\ntype ShowMoreProps = {\n  films: Films;\n  filmsPerPageCount: number;\n}\n\nconst mapStateToProps = (state: State) => ({\n  films: getFilms(state),\n  filmsPerPageCount: getFilmsPerPageCount(state),\n  genre: getGenre(state),\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<Actions>) => ({\n  onShowMoreFilms() {\n    dispatch(showMoreFilms());\n  },\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\ntype ConnectedComponentProps = PropsFromRedux & ShowMoreProps;\n\nfunction ShowMore(props: ConnectedComponentProps): JSX.Element {\n  const { films, filmsPerPageCount, genre, onShowMoreFilms } = props;\n\n  if (getFilmsByGenre(genre, films).length > filmsPerPageCount) {\n    return (\n      <div className=\"catalog__more\">\n        <button className=\"catalog__button\" type=\"button\"\n          onClick={() => {\n            onShowMoreFilms();\n          }}\n        >\n          Show more\n        </button>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"catalog__more\">\n      </div>\n    );\n  }\n}\n\nexport { ShowMore };\nexport default connector(ShowMore);\n","import {ConnectedProps, connect} from 'react-redux';\nimport {Links, PROMO_ID} from '../../const';\nimport {getFilms, getPromo} from '../../store/film-data/selectors';\nimport {getFilmsPerPageCount, getGenre} from '../../store/film-search/selectors';\n\nimport FilmList from '../film-list/film-list';\nimport GenreList from '../genre-list/genre-list';\nimport {Link} from 'react-router-dom';\nimport LoadingScreen from '../loading-screen/loading-screen';\nimport Logo from '../logo/logo';\nimport MyListButton from '../my-list-button/my-list-button';\nimport ShowMore from '../show-more/show-more';\nimport {State} from '../../types/state';\nimport UserBlock from '../user-block/user-block';\nimport {getFilmsByGenre} from '../../utils/films';\n\nconst mapStateToProps = (state: State) => ({\n  genre: getGenre(state),\n  films: getFilms(state),\n  filmsPerPageCount: getFilmsPerPageCount(state),\n  promo: getPromo(state),\n});\n\nconst connector = connect(mapStateToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nfunction MainScreen(props: PropsFromRedux): JSX.Element {\n  const {genre, films, filmsPerPageCount, promo} = props;\n\n  if (!promo) {\n    return <LoadingScreen />;\n  }\n\n  return (\n    <>\n      <section className=\"film-card\">\n        <div className=\"film-card__bg\">\n          <img src={promo.previewImage} alt={promo.name} />\n        </div>\n\n        <h1 className=\"visually-hidden\">WTW</h1>\n\n        <header className=\"page-header film-card__head\">\n          <div className=\"logo\">\n            <Logo />\n          </div>\n\n          <UserBlock />\n\n        </header>\n\n        <div className=\"film-card__wrap\">\n          <div className=\"film-card__info\">\n            <div className=\"film-card__poster\">\n              <img src={promo.posterImage} alt={`${promo.name} poster`} width=\"218\" height=\"327\" />\n            </div>\n\n            <div className=\"film-card__desc\">\n              <h2 className=\"film-card__title\">{promo.name}</h2>\n              <p className=\"film-card__meta\">\n                <span className=\"film-card__genre\">{promo.genre}</span>\n                <span className=\"film-card__year\">{promo.released}</span>\n              </p>\n\n              <div className=\"film-card__buttons\">\n                <Link to={Links.PlayerById(PROMO_ID)} className=\"btn btn--play film-card__button\" type=\"button\">\n                  <svg viewBox=\"0 0 19 19\" width=\"19\" height=\"19\">\n                    <use xlinkHref=\"#play-s\"></use>\n                  </svg>\n                  <span>Play</span>\n                </Link>\n\n                <MyListButton isFavorite={promo.isFavorite}/>\n\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      <div className=\"page-content\">\n        <section className=\"catalog\">\n          <h2 className=\"catalog__title visually-hidden\">Catalog</h2>\n\n          <GenreList />\n\n          <FilmList films={getFilmsByGenre(genre, films)} filmsPerPageCount={filmsPerPageCount}/>\n\n          <ShowMore />\n\n        </section>\n\n        <footer className=\"page-footer\">\n          <div className=\"logo\">\n            <a className=\"logo__link logo__link--light\" href=\"/\">\n              <span className=\"logo__letter logo__letter--1\">W</span>\n              <span className=\"logo__letter logo__letter--2\">T</span>\n              <span className=\"logo__letter logo__letter--3\">W</span>\n            </a>\n          </div>\n\n          <div className=\"copyright\">\n            <p>© 2019 What to watch Ltd.</p>\n          </div>\n        </footer>\n      </div>\n    </>\n  );\n\n}\n\nexport {MainScreen};\nexport default connector(MainScreen);\n\n","import {ConnectedProps, connect} from 'react-redux';\nimport { Films, FilmsFromServer } from '../../types/film';\nimport { useEffect, useState } from 'react';\n\nimport { APIRoute } from '../../const';\nimport FilmList from '../film-list/film-list';\nimport Logo from '../logo/logo';\nimport {State} from '../../types/state';\nimport UserBlock from '../user-block/user-block';\nimport { adaptFilmsToClient } from '../../utils/adapter/film';\nimport api from '../../services/api';\nimport {getFilms} from '../../store/film-data/selectors';\n\nconst mapStateToProps = (state: State) => ({\n  films: getFilms(state),\n});\n\nconst connector = connect(mapStateToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nfunction MyListScreen(props: PropsFromRedux): JSX.Element {\n  const {films} = props;\n\n  const [appState, setAppState] = useState<Films>([]);\n\n  useEffect(() => {\n    api.get<FilmsFromServer>(APIRoute.Favorite).then((response) => setAppState(adaptFilmsToClient(response.data)));\n  }, [setAppState]);\n\n  return (\n    <div className=\"user-page\">\n      <header className=\"page-header user-page__head\">\n        <div className=\"logo\">\n          <Logo />\n        </div>\n\n        <h1 className=\"page-title user-page__title\">My list</h1>\n\n        <UserBlock />\n\n      </header>\n\n      <section className=\"catalog\">\n        <h2 className=\"catalog__title visually-hidden\">Catalog</h2>\n\n        <FilmList films={appState} filmsPerPageCount={films.length}/>\n\n      </section>\n\n      <footer className=\"page-footer\">\n        <div className=\"logo\">\n          <a href=\"main.html\" className=\"logo__link logo__link--light\">\n            <span className=\"logo__letter logo__letter--1\">W</span>\n            <span className=\"logo__letter logo__letter--2\">T</span>\n            <span className=\"logo__letter logo__letter--3\">W</span>\n          </a>\n        </div>\n\n        <div className=\"copyright\">\n          <p>© 2019 What to watch Ltd.</p>\n        </div>\n      </footer>\n    </div>\n  );\n}\n\nexport {MyListScreen};\nexport default connector(MyListScreen);\n","import {AppRoute, Links, PROMO_ID} from '../../const';\nimport {ConnectedProps, connect} from 'react-redux';\nimport {getCurrentFilm, getPromo} from '../../store/film-data/selectors';\nimport {getCurrentPlayerTime, getVideoDuration} from '../../store/film-search/selectors';\nimport {getElapsedTime, getPlayerProgress} from '../../utils/films';\nimport {useEffect, useState} from 'react';\n\nimport {Film} from '../../types/film';\nimport {Link} from 'react-router-dom';\nimport NotFoundScreen from '../not-found-screen/not-found-screen';\nimport {State} from '../../types/state';\nimport {ThunkAppDispatch} from '../../types/action';\nimport VideoPlayer from '../video-player/video-player';\nimport {fetchCurrentFilmAction} from '../../store/api-actions';\nimport {useParams} from 'react-router';\n\nconst mapStateToProps = (state: State) => ({\n  film: getCurrentFilm(state),\n  currentPlayerTime: getCurrentPlayerTime(state),\n  videoDuration: getVideoDuration(state),\n  promo: getPromo(state),\n});\n\nconst mapDispatchToProps = (dispatch: ThunkAppDispatch) => ({\n  fetchCurrentFilm(id: number) {\n    dispatch(fetchCurrentFilmAction(id));\n  },\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nfunction PlayerScreen(props: PropsFromRedux): JSX.Element {\n  const {film, promo, currentPlayerTime, videoDuration, fetchCurrentFilm} = props;\n  const {id} = useParams<{id: string}>();\n\n  const [isActive, setIsActive] = useState(true);\n  const [isFullScreen, setIsFullScreen] = useState(false);\n\n  let currentFilm: Film | undefined;\n\n  id === PROMO_ID ? currentFilm = promo : currentFilm = film;\n\n  useEffect(() => {\n    if (id !== PROMO_ID) {\n      fetchCurrentFilm(Number(id));\n    }\n  }, [fetchCurrentFilm, id]);\n\n  const onPlayClick = () => {\n    setIsActive(!isActive);\n  };\n\n  const onFullScreenClick = () => {\n    setIsFullScreen(!isFullScreen);\n  };\n\n  const playerStyle = {\n    left: getPlayerProgress(currentPlayerTime, videoDuration),\n  };\n\n  if (!currentFilm) {\n    return <NotFoundScreen />;\n  }\n\n  return (\n    <div className=\"player\">\n\n      <VideoPlayer className=\"player__video\" previewImage={currentFilm.posterImage} src={currentFilm.videoLink} muted={false} isActive={isActive} isFilmScreen isFullScreen={isFullScreen} />\n\n      <Link to={id === PROMO_ID ? AppRoute.Main : Links.OverviewFilmById(currentFilm.id)} type=\"button\" className=\"player__exit\">Exit</Link>\n\n      <div className=\"player__controls\">\n        <div className=\"player__controls-row\">\n          <div className=\"player__time\">\n            <progress className=\"player__progress\" value={getPlayerProgress(currentPlayerTime, videoDuration)} max=\"100\"></progress>\n            <div className=\"player__toggler\" style={playerStyle}>Toggler</div>\n          </div>\n          <div className=\"player__time-value\">{getElapsedTime(currentPlayerTime, videoDuration)}</div>\n        </div>\n\n        <div className=\"player__controls-row\">\n          <button\n            type=\"button\"\n            className=\"player__play\"\n            onClick={() => {\n              onPlayClick();\n            }}\n          >\n            <svg viewBox=\"0 0 19 19\" width=\"19\" height=\"19\">\n              <use\n                xlinkHref={isActive ? '#pause' : '#play-s'}\n              >\n              </use>\n            </svg>\n            <span>Play</span>\n          </button>\n          <div className=\"player__name\">{currentFilm.name}</div>\n\n          <button\n            type=\"button\"\n            className=\"player__full-screen\"\n            onClick={() => {\n              onFullScreenClick();\n            }}\n          >\n            <svg viewBox=\"0 0 27 27\" width=\"27\" height=\"27\">\n              <use xlinkHref=\"#full-screen\"></use>\n            </svg>\n            <span>Full screen</span>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n\n}\n\nexport {PlayerScreen};\nexport default connector(PlayerScreen);\n","import {AppRoute, AuthorizationStatus} from '../../const';\nimport {ConnectedProps, connect} from 'react-redux';\nimport {Redirect, Route} from 'react-router-dom';\n\nimport {RouteProps} from 'react-router-dom';\nimport {State} from '../../types/state';\nimport {getAuthorizationStatus} from '../../store/user-process/selectors';\n\ntype PrivateRouteProps = RouteProps & {\n  render: () => JSX.Element;\n  authorizationStatus: AuthorizationStatus;\n}\n\nconst mapStateToProps = (state: State) => ({\n  authorizationStatus: getAuthorizationStatus(state),\n});\n\nconst connector = connect(mapStateToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\ntype ConnectedComponentProps = PropsFromRedux & PrivateRouteProps;\n\n\nfunction PrivateRoute(props: ConnectedComponentProps): JSX.Element {\n  const {exact, path, render, authorizationStatus} = props;\n\n  return (\n    <Route\n      exact={exact}\n      path={path}\n      render={() => (\n        authorizationStatus === AuthorizationStatus.Auth\n          ? render()\n          : <Redirect to={AppRoute.SignIn} />\n      )}\n    />\n  );\n}\n\nexport {PrivateRoute};\nexport default connector(PrivateRoute);\n","import {ConnectedProps, connect} from 'react-redux';\nimport {FormEvent, useRef} from 'react';\n\nimport {AuthData} from '../../types/auth-data';\nimport Logo from '../logo/logo';\nimport {State} from '../../types/state';\nimport {ThunkAppDispatch} from '../../types/action';\nimport { getLoginError } from '../../store/user-process/selectors';\nimport {loginAction} from '../../store/api-actions';\n\nconst mapStateToProps = (state: State) => ({\n  loginError: getLoginError(state),\n});\n\nconst mapDispatchToProps = (dispatch: ThunkAppDispatch) => ({\n  onSubmit(authData: AuthData) {\n    dispatch(loginAction(authData));\n  },\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nfunction SignInScreen(props: PropsFromRedux): JSX.Element {\n  const {onSubmit, loginError} = props;\n\n  const loginRef = useRef<HTMLInputElement | null>(null);\n  const passwordRef = useRef<HTMLInputElement | null>(null);\n\n  const handleSubmit = (evt: FormEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n\n    if (loginRef.current !== null && passwordRef.current !== null) {\n      onSubmit({\n        login: loginRef.current.value,\n        password: passwordRef.current.value,\n      });\n    }\n  };\n\n  return (\n    <div className=\"user-page\">\n      <header className=\"page-header user-page__head\">\n        <div className=\"logo\">\n          <Logo />\n        </div>\n\n        <h1 className=\"page-title user-page__title\">Sign in</h1>\n      </header>\n\n      <div className=\"sign-in user-page__content\">\n        <form action=\"\" className=\"sign-in__form\"\n          onSubmit={handleSubmit}\n        >\n\n          {loginError ?\n            <div className=\"sign-in__message\">\n              <p>{loginError}</p>\n            </div>\n            : ''}\n\n          <div className=\"sign-in__fields\">\n            <div className=\"sign-in__field\">\n              <input\n                ref={loginRef}\n                className=\"sign-in__input\"\n                type=\"email\"\n                placeholder=\"Email address\"\n                name=\"user-email\"\n                id=\"user-email\"\n                required\n              />\n              <label className=\"sign-in__label visually-hidden\" htmlFor=\"user-email\">Email address</label>\n            </div>\n            <div className=\"sign-in__field\">\n              <input\n                ref={passwordRef}\n                className=\"sign-in__input\"\n                type=\"password\"\n                placeholder=\"Password\"\n                name=\"user-password\"\n                id=\"user-password\"\n                required\n              />\n              <label className=\"sign-in__label visually-hidden\" htmlFor=\"user-password\">Password</label>\n            </div>\n          </div>\n          <div className=\"sign-in__submit\">\n            <button className=\"sign-in__btn\" type=\"submit\">Sign in</button>\n          </div>\n        </form>\n      </div>\n\n      <footer className=\"page-footer\">\n        <div className=\"logo\">\n          <a href=\"main.html\" className=\"logo__link logo__link--light\">\n            <span className=\"logo__letter logo__letter--1\">W</span>\n            <span className=\"logo__letter logo__letter--2\">T</span>\n            <span className=\"logo__letter logo__letter--3\">W</span>\n          </a>\n        </div>\n\n        <div className=\"copyright\">\n          <p>© 2019 What to watch Ltd.</p>\n        </div>\n      </footer>\n    </div>\n  );\n}\n\nexport {SignInScreen};\nexport default connector(SignInScreen);\n","import {AuthInfo, AuthInfoFromServer} from '../../types/auth-info';\n\nexport const adaptAuthInfoToClient = (authInfo: AuthInfoFromServer): AuthInfo => ({\n  id: authInfo.id,\n  email: authInfo.email,\n  name: authInfo.name,\n  avatarUrl: authInfo.avatar_url,\n  token: authInfo.token,\n});\n","import {createBrowserHistory} from 'history';\n\nconst browserHistory = createBrowserHistory();\n\nexport default browserHistory;\n","import {Router as BrowserRouter, Route, Switch} from 'react-router-dom';\nimport {ConnectedProps, connect} from 'react-redux';\n\nimport AddReviewScreen from '../add-review-screen/add-review-screen';\nimport {AppRoute} from '../../const';\nimport FilmScreen from '../film-screen/film-screen';\nimport LoadingScreen from '../loading-screen/loading-screen';\nimport MainScreen from '../main-screen/main-screen';\nimport MyListScreen from '../my-list-screen/my-list-screen';\nimport NotFoundScreen from '../not-found-screen/not-found-screen';\nimport PlayerScreen from '../player-screen/player-screen';\nimport PrivateRoute from '../private-route/private-route';\nimport SignInScreen from '../sign-in-screen/sign-in-screen';\nimport {State} from '../../types/state';\nimport browserHistory from '../../browser-history';\nimport {getLoadedDataStatus} from '../../store/film-data/selectors';\n\nconst mapStateToProps = (state: State) => ({\n  isDataLoaded: getLoadedDataStatus(state),\n});\n\nconst connector = connect(mapStateToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nfunction App(props: PropsFromRedux): JSX.Element {\n  const {isDataLoaded} = props;\n\n  if (!isDataLoaded) {\n    return (\n      <LoadingScreen />\n    );\n  }\n\n  return (\n\n    <BrowserRouter history={browserHistory}>\n      <Switch>\n        <Route exact path={AppRoute.Main}>\n          <MainScreen />\n        </Route>\n        <Route exact path={AppRoute.SignIn}>\n          <SignInScreen />\n        </Route>\n        <PrivateRoute\n          exact\n          path={AppRoute.MyList}\n          render={() => <MyListScreen />}\n        >\n        </PrivateRoute>\n        <PrivateRoute\n          exact\n          path={AppRoute.AddReview}\n          render={() => <AddReviewScreen />}\n        >\n        </PrivateRoute>\n        <Route path={AppRoute.Film}>\n          <FilmScreen />\n        </Route>\n        <Route exact path={AppRoute.Player}>\n          <PlayerScreen />\n        </Route>\n        <Route>\n          <NotFoundScreen />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport {App};\nexport default connector(App);\n","import {applyMiddleware, createStore} from 'redux';\nimport {fetchFilmsAction, fetchPromoAction} from './store/api-actions';\n\nimport App from './components/app/app';\nimport {Provider} from 'react-redux';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {ThunkAppDispatch} from './types/action';\nimport api from './services/api';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport {redirect} from './store/middlewares/redirect';\nimport {rootReducer} from './store/root-reducer';\nimport thunk from 'redux-thunk';\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk.withExtraArgument(api)),\n    applyMiddleware(redirect),\n  ),\n);\n\n(store.dispatch as ThunkAppDispatch)(fetchFilmsAction());\n(store.dispatch as ThunkAppDispatch)(fetchPromoAction());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'));\n","import {ActionType} from '../../types/action';\nimport {Middleware} from 'redux';\nimport {State} from '../../types/state';\nimport browserHistory from '../../browser-history';\n\nexport const redirect: Middleware<unknown, State> =\n  (_store) =>\n    (next) =>\n      (action) => {\n\n        if (action.type === ActionType.RedirectToRoute) {\n          browserHistory.push(action.payload);\n        }\n\n        return next(action);\n      };\n"],"sourceRoot":""}